-- T√©oüçéüçè Hub - Executor GUI (StarterGui -> LocalScript)
-- B·∫£n n√†y d√†nh cho ng∆∞·ªùi m·ªõi: m·ªçi ch·ªó c·∫ßn s·ª≠a c√≥ ch√∫ th√≠ch ng·∫Øn ngay c·∫°nh d√≤ng (d·∫°ng -- üçé ... üëà)
-- K√≠ch th∆∞·ªõc: 400 x 250
-- H√¨nh n·ªÅn: rbxassetid://120546351045897
-- Vi·ªÅn neon: xanh lam + cam (glow)
-- L∆∞u √Ω: loadstring ch·ªâ ch·∫°y trong m√¥i tr∆∞·ªùng cho ph√©p (Studio). ƒê·∫£m b·∫£o d√πng an to√†n.

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- üçé N·∫øu mu·ªën ƒë·ªïi t√™n GUI (v√≠ d·ª•: "MyGui"), s·ª≠a ch·ªó n√†y üëà
local existing = playerGui:FindFirstChild("TeoHubGui")
if existing then existing:Destroy() end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeoHubGui" -- üçé S·ª≠a t√™n ID GUI ·ªü ƒë√¢y n·∫øu c·∫ßn üëà
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Main window (frame)
local main = Instance.new("Frame", screenGui)
main.Name = "MainWindow"
main.Size = UDim2.new(0, 400, 0, 250) -- üçé S·ª≠a k√≠ch th∆∞·ªõc ·ªü ƒë√¢y (width,height) n·∫øu mu·ªën üëà
main.Position = UDim2.new(0.5, -200, 0.5, -125)
main.AnchorPoint = Vector2.new(0.5, 0.5)
main.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
main.BackgroundTransparency = 0.40 -- üçé ƒê·ªô trong su·ªët (0..1) - s·ª≠a n·∫øu mu·ªën üëà
main.BorderSizePixel = 0
main.ZIndex = 5
main.Active = true
main.Draggable = true

local mainCorner = Instance.new("UICorner", main)
mainCorner.CornerRadius = UDim.new(0, 10)

-- Glow strokes: cyan outer + orange inner (neon)
local strokeCyan = Instance.new("UIStroke", main)
strokeCyan.Name = "CyanStroke"
strokeCyan.Color = Color3.fromRGB(0, 170, 255) -- üçé M√†u vi·ªÅn ch√≠nh (xanh lam) - s·ª≠a n·∫øu mu·ªën üëà
strokeCyan.Thickness = 2
strokeCyan.Transparency = 0.2
strokeCyan.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

local strokeOrange = Instance.new("UIStroke", main)
strokeOrange.Name = "OrangeStroke"
strokeOrange.Color = Color3.fromRGB(255, 140, 30) -- üçé M√†u vi·ªÅn ph·ª• (cam) - s·ª≠a n·∫øu mu·ªën üëà
strokeOrange.Thickness = 1
strokeOrange.Transparency = 0.35
strokeOrange.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- glow placeholder (layering only)
local glow = Instance.new("ImageLabel", main)
glow.Name = "Glow"
glow.Size = UDim2.new(1, 30, 1, 30)
glow.Position = UDim2.new(-0.03, 0, -0.03, 0)
glow.BackgroundTransparency = 1
glow.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
glow.ZIndex = 1
glow.ImageTransparency = 1

-- Title bar
local titleBar = Instance.new("Frame", main)
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 28)
titleBar.Position = UDim2.new(0, 0, 0, 0)
titleBar.BackgroundTransparency = 1

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Name = "Title"
titleLabel.Text = "T√©oüçéüçè Hub" -- üçé S·ª≠a t√™n Hub hi·ªÉn th·ªã ·ªü ƒë√¢y üëà
titleLabel.Size = UDim2.new(1, -60, 1, 0)
titleLabel.Position = UDim2.new(0, 12, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.SourceSans -- üçé Font: SourceSans (anime-soft). Thay Enum.Font n·∫øu mu·ªën üëà
titleLabel.TextSize = 18
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.ZIndex = 6

-- Hide/Show button
local hideBtn = Instance.new("TextButton", titleBar)
hideBtn.Name = "HideBtn"
hideBtn.Size = UDim2.new(0, 40, 1, -4)
hideBtn.Position = UDim2.new(1, -46, 0, 2)
hideBtn.BackgroundTransparency = 0.3
hideBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
hideBtn.Text = "·∫®n" -- üçé ƒê·ªïi th√†nh "Hi·ªán" / "·∫®n" n·∫øu mu·ªën (l·∫≠p logic thay ƒë·ªïi text) üëà
hideBtn.Font = Enum.Font.SourceSansBold
hideBtn.TextSize = 14
hideBtn.TextColor3 = Color3.fromRGB(255,255,255)
local hideCorner = Instance.new("UICorner", hideBtn)
hideCorner.CornerRadius = UDim.new(0,6)

hideBtn.MouseButton1Click:Connect(function()
	main.Visible = not main.Visible
end)

-- Left sidebar (tabs)
local sidebar = Instance.new("Frame", main)
sidebar.Name = "Sidebar"
sidebar.Size = UDim2.new(0, 120, 1, -28)
sidebar.Position = UDim2.new(0, 0, 0, 28)
sidebar.BackgroundColor3 = Color3.fromRGB(18,18,18)
sidebar.BackgroundTransparency = 0
local sideCorner = Instance.new("UICorner", sidebar)
sideCorner.CornerRadius = UDim.new(0, 8)

local sideLayout = Instance.new("UIListLayout", sidebar)
sideLayout.Padding = UDim.new(0,6)
sideLayout.SortOrder = Enum.SortOrder.LayoutOrder
sideLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
sideLayout.VerticalAlignment = Enum.VerticalAlignment.Top

local sidePadding = Instance.new("UIPadding", sidebar)
sidePadding.PaddingTop = UDim.new(0,8)
sidePadding.PaddingLeft = UDim.new(0,6)

-- Right content area (pages)
local content = Instance.new("Frame", main)
content.Name = "Content"
content.Size = UDim2.new(1, -120, 1, -28)
content.Position = UDim2.new(0, 120, 0, 28)
content.BackgroundTransparency = 1
local contentCorner = Instance.new("UICorner", content)
contentCorner.CornerRadius = UDim.new(0,6)

local pageFolder = Instance.new("Folder", content)
pageFolder.Name = "Pages"

local uiPageLayout = Instance.new("UIPageLayout", pageFolder)
uiPageLayout.FillDirection = Enum.FillDirection.Vertical
uiPageLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiPageLayout.TweenTime = 0.15
uiPageLayout.EasingStyle = Enum.EasingStyle.Quad
uiPageLayout.EasingDirection = Enum.EasingDirection.Out

-- Helper: create a tab button and page
local Tabs = {}
local function CreateTab(tabName, iconImage)
	local btn = Instance.new("TextButton", sidebar)
	btn.Name = tabName .. "_Tab"
	btn.Size = UDim2.new(1, -12, 0, 36)
	btn.BackgroundTransparency = 1
	btn.AutoButtonColor = false
	btn.Font = Enum.Font.SourceSansBold
	btn.Text = ""
	btn.TextColor3 = Color3.new(1,1,1)

	local btnFrame = Instance.new("Frame", btn)
	btnFrame.Size = UDim2.new(1, 0, 1, 0)
	btnFrame.BackgroundTransparency = 0.8
	btnFrame.BackgroundColor3 = Color3.fromRGB(0,0,0)
	local bfCorner = Instance.new("UICorner", btnFrame)
	bfCorner.CornerRadius = UDim.new(0,6)

	local icon = Instance.new("ImageLabel", btnFrame)
	icon.Name = "Icon"
	icon.Size = UDim2.new(0, 24, 0, 24)
	icon.Position = UDim2.new(0, 6, 0.5, -12)
	icon.BackgroundTransparency = 1
	icon.Image = iconImage or "" -- üçé S·ª≠a icon ·ªü ƒë√¢y (rbxassetid) n·∫øu mu·ªën üëà

	local label = Instance.new("TextLabel", btnFrame)
	label.Size = UDim2.new(1, -38, 1, 0)
	label.Position = UDim2.new(0, 36, 0, 0)
	label.BackgroundTransparency = 1
	label.Text = tabName -- üçé T√™n tab hi·ªÉn th·ªã, s·ª≠a ·ªü ƒë√¢y n·∫øu mu·ªën üëà
	label.Font = Enum.Font.SourceSans
	label.TextSize = 14
	label.TextColor3 = Color3.fromRGB(255,255,255)
	label.TextXAlignment = Enum.TextXAlignment.Left

	-- highlight overlay
	local highlight = Instance.new("Frame", btnFrame)
	highlight.Size = UDim2.new(0, 4, 1, 0)
	highlight.Position = UDim2.new(0, -4, 0, 0)
	highlight.BackgroundColor3 = Color3.fromRGB(0,170,255)
	highlight.BackgroundTransparency = 0.8
	local hCorner = Instance.new("UICorner", highlight); hCorner.CornerRadius = UDim.new(0,2)

	-- create page
	local page = Instance.new("ScrollingFrame", pageFolder)
	page.Name = tabName .. "_Page"
	page.Size = UDim2.new(1, 0, 1, 0)
	page.CanvasSize = UDim2.new(0,0,0,0)
	page.ScrollBarThickness = 4
	page.BackgroundTransparency = 1
	page.AutomaticCanvasSize = Enum.AutomaticSize.Y
	page.LayoutOrder = 1

	local pagePadding = Instance.new("UIPadding", page)
	pagePadding.PaddingTop = UDim.new(0, 10)
	pagePadding.PaddingLeft = UDim.new(0, 12)
	pagePadding.PaddingRight = UDim.new(0, 12)

	local pageList = Instance.new("UIListLayout", page)
	pageList.SortOrder = Enum.SortOrder.LayoutOrder
	pageList.Padding = UDim.new(0,8)

	-- tab click behavior
	btn.MouseButton1Click:Connect(function()
		uiPageLayout:JumpTo(page)
		-- visual highlight: fade in highlight
		TweenService:Create(highlight, TweenInfo.new(0.18, Enum.EasingStyle.Quad), {BackgroundTransparency = 0}):Play()
	end)

	table.insert(Tabs, {Button = btn, Page = page, Name = tabName})
	return { Button = btn, Page = page, Name = tabName,
		-- widget API
		AddButton = function(_, text)
			local container = Instance.new("Frame", page)
			container.Size = UDim2.new(1, 0, 0, 36)
			container.BackgroundTransparency = 1
			local btn = Instance.new("TextButton", container)
			btn.Size = UDim2.new(1, 0, 1, 0)
			btn.BackgroundColor3 = Color3.fromRGB(20,20,20)
			btn.AutoButtonColor = false
			btn.Text = text -- üçé S·ª≠a ch·ªØ n√∫t hi·ªÉn th·ªã ·ªü ƒë√¢y üëà
			btn.Font = Enum.Font.SourceSansBold
			btn.TextSize = 14
			btn.TextColor3 = Color3.fromRGB(255,255,255)
			local btnCorner = Instance.new("UICorner", btn)
			btnCorner.CornerRadius = UDim.new(0,6)
			-- hover tween
			btn.MouseEnter:Connect(function()
				TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad), {BackgroundTransparency = 0}):Play()
			end)
			btn.MouseLeave:Connect(function()
				TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad), {BackgroundTransparency = 0.6}):Play()
			end)
			-- placeholder click
			btn.MouseButton1Click:Connect(function()
				print("[TODO] Button clicked:", text)
				-- üçé Th√™m code x·ª≠ l√Ω khi nh·∫•n n√∫t ·ªü ƒë√¢y (v√≠ d·ª• call function) üëà
				-- TODO: add real action here
			end)
			return btn
		end,

		AddToggle = function(_, title, default)
			local container = Instance.new("Frame", page)
			container.Size = UDim2.new(1, 0, 0, 46)
			container.BackgroundTransparency = 1
			local label = Instance.new("TextLabel", container)
			label.Size = UDim2.new(0.7, 0, 1, 0)
			label.BackgroundTransparency = 1
			label.Font = Enum.Font.SourceSans
			label.TextSize = 14
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Text = title -- nh·∫£y tr√™n kh√¥ng

			local toggleBtn = Instance.new("TextButton", container)
			toggleBtn.Size = UDim2.new(0, 60, 0, 28)
			toggleBtn.Position = UDim2.new(1, -70, 0.5, -14)
			toggleBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
			toggleBtn.Text = ""
			local tCorner = Instance.new("UICorner", toggleBtn); tCorner.CornerRadius = UDim.new(0,14)
			local small = Instance.new("Frame", toggleBtn)
			small.Size = UDim2.new(0, 24, 0, 24)
			small.Position = UDim2.new(0, 4, 0.5, -12)
			small.BackgroundColor3 = default and Color3.fromRGB(0,170,255) or Color3.fromRGB(0,0,0)
			local sCorner = Instance.new("UICorner", small); sCorner.CornerRadius = UDim.new(1,0)
			local state = default and true or false

			toggleBtn.MouseButton1Click:Connect(function()
				state = not state
				if state then
					TweenService:Create(small, TweenInfo.new(0.12), {Position = UDim2.new(0, 32, 0.5, -12), BackgroundColor3 = Color3.fromRGB(0,170,255)}):Play()
				else
					TweenService:Create(small, TweenInfo.new(0.12), {Position = UDim2.new(0, 4, 0.5, -12), BackgroundColor3 = Color3.fromRGB(0,0,0)}):Play()
				end
				print("[TODO] Toggle changed:", title, state)
				-- üåå Infinite Jump by T√©üçé
-- B·∫≠t/t·∫Øt b·∫±ng ph√≠m c√°ch (Space)
-- An to√†n, kh√¥ng g√¢y l·ªói server

local Player = game:GetService("Players").LocalPlayer
local UserInputService = game:GetService("UserInputService")

local InfiniteJumpEnabled = true

UserInputService.JumpRequest:Connect(function()
	if InfiniteJumpEnabled then
		Player.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
	end
end)

print("‚úÖ Infinite Jump Loaded - Nh·∫•n Space ƒë·ªÉ nh·∫£y li√™n t·ª•c tr√™n kh√¥ng!")
				-- TODO: add real toggle behavior here
			end)

			-- initialize visual
			if state then small.Position = UDim2.new(0, 32, 0.5, -12) else small.Position = UDim2.new(0,4,0.5,-12) end
			return toggleBtn
		end,

		AddTextbox = function(_, labelText, placeholder)
			local container = Instance.new("Frame", page)
			container.Size = UDim2.new(1, 0, 0, 36)
			container.BackgroundTransparency = 1
			local lbl = Instance.new("TextLabel", container)
			lbl.Size = UDim2.new(0.45, 0, 1, 0)
			lbl.BackgroundTransparency = 1
			lbl.Font = Enum.Font.SourceSans
			lbl.TextSize = 14
			lbl.Text = labelText -- üçé S·ª≠a nh√£n √¥ nh·∫≠p ·ªü ƒë√¢y üëà

			local textBox = Instance.new("TextBox", container)
			textBox.Size = UDim2.new(0.5, 0, 1, 0)
			textBox.Position = UDim2.new(0.48, 0, 0, 0)
			textBox.BackgroundColor3 = Color3.fromRGB(30,30,30)
			textBox.TextColor3 = Color3.fromRGB(220,220,220)
			textBox.Text = placeholder or ""
			textBox.ClearTextOnFocus = false
			local tbCorner = Instance.new("UICorner", textBox); tbCorner.CornerRadius = UDim.new(0,6)

			textBox.FocusLost:Connect(function(enter)
				if enter then
					print("[TODO] TextBox input for", labelText, ":", textBox.Text)
					-- üçé X·ª≠ l√Ω khi ng∆∞·ªùi d√πng nh·∫≠p xong (nh·∫•n Enter) - ch√®n code ·ªü ƒë√¢y üëà
				end
			end)
			return textBox
		end,

		AddDropdown = function(_, labelText, options)
			local container = Instance.new("Frame", page)
			container.Size = UDim2.new(1, 0, 0, 36)
			container.BackgroundTransparency = 1
			local lbl = Instance.new("TextLabel", container)
			lbl.Size = UDim2.new(0.4, 0, 1, 0)
			lbl.BackgroundTransparency = 1
			lbl.Font = Enum.Font.SourceSans
			lbl.TextSize = 14
			lbl.Text = labelText -- üçé S·ª≠a nh√£n dropdown ·ªü ƒë√¢y üëà

			local pick = Instance.new("TextButton", container)
			pick.Size = UDim2.new(0.5, 0, 1, 0)
			pick.Position = UDim2.new(0.48, 0, 0, 0)
			pick.AutoButtonColor = false
			pick.BackgroundColor3 = Color3.fromRGB(30,30,30)
			pick.Text = "Ch·ªçn..." -- üçé ƒê·ªïi ch·ªØ m·∫∑c ƒë·ªãnh c·ªßa dropdown n·∫øu mu·ªën üëà
			local pCorner = Instance.new("UICorner", pick); pCorner.CornerRadius = UDim.new(0,6)

			local dropFrame = Instance.new("Frame", container)
			dropFrame.Size = UDim2.new(0.9, 0, 0, 0)
			dropFrame.Position = UDim2.new(0.05, 0, 1, 4)
			dropFrame.BackgroundTransparency = 1
			dropFrame.ClipsDescendants = true

			local dropList = Instance.new("Frame", dropFrame)
			dropList.Size = UDim2.new(1,0,0,0)
			dropList.BackgroundColor3 = Color3.fromRGB(28,28,28)
			dropList.BackgroundTransparency = 0.95
			local dlCorner = Instance.new("UICorner", dropList); dlCorner.CornerRadius = UDim.new(0,6)
			local dlLayout = Instance.new("UIListLayout", dropList)
			dlLayout.SortOrder = Enum.SortOrder.LayoutOrder
			dlLayout.Padding = UDim.new(0,4)

			local open = false
			local function rebuild()
				for _,c in ipairs(dropList:GetChildren()) do if c:IsA("TextButton") then c:Destroy() end end
				local height = 0
				for i,opt in ipairs(options or {}) do
					local it = Instance.new("TextButton", dropList)
					it.Size = UDim2.new(1, -8, 0, 28)
					it.Position = UDim2.new(0, 4, 0, height)
					it.BackgroundColor3 = Color3.fromRGB(40,40,40)
					it.AutoButtonColor = false
					it.Text = opt
					it.Font = Enum.Font.SourceSans
					it.TextSize = 14
					local ic = Instance.new("UICorner", it); ic.CornerRadius = UDim.new(0,6)
					it.MouseButton1Click:Connect(function()
						pick.Text = opt
						open = false
						dropFrame:TweenSize(UDim2.new(0.9,0,0,0),"Out","Quad",0.12,true)
						print("[TODO] Dropdown selected", labelText, opt)
						-- üçé Ch√®n h√†nh ƒë·ªông khi ch·ªçn item ·ªü ƒë√¢y (v√≠ d·ª•: l∆∞u bi·∫øn, g·ªçi function) üëà
					end)
					height = height + 32
				end
				dropList.Size = UDim2.new(1,0,0,height)
				dropFrame.Size = UDim2.new(0.9, 0, 0, 0)
			end
			rebuild()

			pick.MouseButton1Click:Connect(function()
				open = not open
				if open then
					dropFrame:TweenSize(UDim2.new(0.9,0,0,120),"Out","Quad",0.12,true)
				else
					dropFrame:TweenSize(UDim2.new(0.9,0,0,0),"Out","Quad",0.12,true)
				end
			end)
			return { Button = pick, Rebuild = rebuild }
		end,

		AddLabel = function(_, text)
			local l = Instance.new("TextLabel", page)
			l.Size = UDim2.new(1, 0, 0, 22)
			l.BackgroundTransparency = 1
			l.Font = Enum.Font.SourceSansBold
			l.TextSize = 14
			l.Text = text -- üçé Ch·ªânh ch·ªØ hi·ªÉn th·ªã ·ªü ƒë√¢y üëà
			l.TextColor3 = Color3.fromRGB(235,235,235)
			l.TextXAlignment = Enum.TextXAlignment.Left
			return l
		end,

		AddSeperator = function(_, text)
			local sep = Instance.new("Frame", page)
			sep.Size = UDim2.new(1,0,0,28)
			sep.BackgroundColor3 = Color3.fromRGB(40,40,40)
			local corner = Instance.new("UICorner", sep); corner.CornerRadius = UDim.new(0,6)
			local label = Instance.new("TextLabel", sep)
			label.Size = UDim2.new(1, -16, 1, 0)
			label.Position = UDim2.new(0, 8, 0, 0)
			label.BackgroundTransparency = 1
			label.Font = Enum.Font.SourceSansBold
			label.TextSize = 13
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Text = " " .. (text or "") -- üçé S·ª≠a ti√™u ƒë·ªÅ m·ª•c ·ªü ƒë√¢y (v√≠ d·ª•: "Executor") üëà
			label.TextColor3 = Color3.fromRGB(220,220,220)
			return sep
		end
	}
end

-- Create single sample tab "Trang ch·ªß"
local home = CreateTab("Trang ch·ªß", "") -- üçé S·ª≠a t√™n tab n·∫øu mu·ªën üëà
-- populate the page with widget samples (all TODO)
local sample = home
sample.AddLabel(sample, "Welcome to T√©oüçéüçè Hub - Demo") -- üçé S·ª≠a d√≤ng ch√†o m·ª´ng ·ªü ƒë√¢y üëà

-- Executor separator (v·ªã tr√≠ executor)
sample.AddSeperator(sample, "Executor") -- üçé S·ª≠a ti√™u ƒë·ªÅ kh·ªëi Executor n·∫øu mu·ªën üëà

-- Executor area (code input)
local exeFrame = Instance.new("Frame", sample.Page)
exeFrame.Size = UDim2.new(1, 0, 0, 120)
exeFrame.BackgroundTransparency = 1
local exeText = Instance.new("TextBox", exeFrame)
exeText.Size = UDim2.new(1, 0, 1, -36)
exeText.Position = UDim2.new(0,0,0,0)
exeText.BackgroundColor3 = Color3.fromRGB(18,18,18)
exeText.TextColor3 = Color3.fromRGB(180,255,180)
exeText.Text = "-- Nh·∫≠p code Lua ·ªü ƒë√¢y (th·ª±c thi LOCAL). TODO: ki·ªÉm tra an to√†n khi deploy ngo√†i Studio" -- üçé S·ª≠a h∆∞·ªõng d·∫´n m·∫∑c ƒë·ªãnh ·ªü ƒë√¢y üëà
exeText.ClearTextOnFocus = false
exeText.MultiLine = true
exeText.Font = Enum.Font.Code
exeText.TextSize = 14
local corner = Instance.new("UICorner", exeText); corner.CornerRadius = UDim.new(0,6)

local btnRow = Instance.new("Frame", exeFrame)
btnRow.Size = UDim2.new(1, 0, 0, 36)
btnRow.Position = UDim2.new(0,0,1,-36)
btnRow.BackgroundTransparency = 1

local executeBtn = Instance.new("TextButton", btnRow)
executeBtn.Size = UDim2.new(0.5, -6, 1, 0)
executeBtn.Position = UDim2.new(0, 6, 0, 0)
executeBtn.Text = "‚ñ∂ Th·ª±c thi" -- üçé S·ª≠a ch·ªØ n√∫t Th·ª±c thi ·ªü ƒë√¢y üëà
executeBtn.Font = Enum.Font.SourceSansBold
executeBtn.TextSize = 14
executeBtn.BackgroundColor3 = Color3.fromRGB(0,170,255)
local execCorner = Instance.new("UICorner", executeBtn); execCorner.CornerRadius = UDim.new(0,6)

local clearBtn = Instance.new("TextButton", btnRow)
clearBtn.Size = UDim2.new(0.5, -6, 1, 0)
clearBtn.Position = UDim2.new(0.5, 0, 0, 0)
clearBtn.Text = "üßπ Xo√°" -- üçé S·ª≠a ch·ªØ n√∫t Xo√° ·ªü ƒë√¢y n·∫øu mu·ªën üëà
clearBtn.Font = Enum.Font.SourceSansBold
clearBtn.TextSize = 14
clearBtn.BackgroundColor3 = Color3.fromRGB(200,80,60)
local clrCorner = Instance.new("UICorner", clearBtn); clrCorner.CornerRadius = UDim.new(0,6)

-- Executor behaviour (LOCAL ONLY: loadstring)
executeBtn.MouseButton1Click:Connect(function()
	local code = exeText.Text
	if not code or code == "" then return end
	-- L∆ØU √ù: loadstring ch·ªâ ch·∫°y trong Studio/Environment c√≥ b·∫≠t. D√πng c·∫©n th·∫≠n.
	local func, err = loadstring(code)
	if not func then
		warn("[Executor] L·ªói c√∫ ph√°p:", err)
		return
	end
	local ok, res = pcall(func)
	if ok then
		print("[Executor] Th·ª±c thi th√†nh c√¥ng:", res)
	else
		warn("[Executor] L·ªói khi ch·∫°y:", res)
	end
end)

clearBtn.MouseButton1Click:Connect(function()
	exeText.Text = ""
end)

-- Add more sample widgets (all print TODO when activated)
sample.AddSeperator(sample, "ƒêi·ªÅu khi·ªÉn (M·∫´u)") -- üçé S·ª≠a ti√™u ƒë·ªÅ m·ª•c ·ªü ƒë√¢y üëà
sample.AddButton(sample, "N√∫t M·∫´u (TODO)") -- üçé S·ª≠a ch·ªØ n√∫t m·∫´u ·ªü ƒë√¢y üëà
sample.AddToggle(sample, "C√¥ng t·∫Øc M·∫´u (TODO)", false) -- üçé S·ª≠a t√™n toggle m·∫´u ·ªü ƒë√¢y üëà
sample.AddTextbox(sample, "√î nh·∫≠p M·∫´u", "G√µ g√¨ ƒë√≥...") -- üçé S·ª≠a nh√£n/placeholder ·ªü ƒë√¢y üëà
local dd = sample.AddDropdown(sample, "Dropdown M·∫´u", {"T√πy ch·ªçn 1","T√πy ch·ªçn 2","T√πy ch·ªçn 3"}) -- üçé S·ª≠a c√°c m·ª•c ·ªü ƒë√¢y üëà
dd.Rebuild() -- populate items

sample.AddSeperator(sample, "Tr·∫°ng th√°i") -- üçé S·ª≠a ti√™u ƒë·ªÅ m·ª•c ·ªü ƒë√¢y üëà
sample.AddLabel(sample, "Tr·∫°ng th√°i: -- TODO update status here") -- üçé S·ª≠a text tr·∫°ng th√°i ·ªü ƒë√¢y üëà

-- Background image on right (anime chibi)
local bg = Instance.new("ImageLabel", content)
bg.Name = "BackgroundArt"
bg.Size = UDim2.new(1, 0, 1, 0)
bg.Position = UDim2.new(0, 0, 0, 0)
bg.BackgroundTransparency = 1
bg.Image = "rbxassetid://120546351045897" -- üçé ƒê·ªïi ID ·∫£nh n·ªÅn ·ªü ƒë√¢y üëà
bg.ImageTransparency = 0.6 -- üçé ƒê·ªô trong su·ªët ·∫£nh n·ªÅn (0..1) - s·ª≠a n·∫øu mu·ªën üëà
bg.ZIndex = 0

-- Ensure pages render above background
pageFolder.Parent = content
for _, p in ipairs(pageFolder:GetChildren()) do
	p.ZIndex = 6
end

-- Jump to the first tab initially
if #Tabs > 0 then
	uiPageLayout:JumpTo(pageFolder:GetChildren()[1])
end

-- Small floating toggle icon (corner)
local floatGui = Instance.new("Frame", screenGui)
floatGui.Name = "FloatToggle"
floatGui.AnchorPoint = Vector2.new(0,0)
floatGui.Position = UDim2.new(0.02, 0, 0.03, 0)
floatGui.Size = UDim2.new(0, 48, 0, 48)
floatGui.BackgroundTransparency = 1

local imgBtn = Instance.new("ImageButton", floatGui)
imgBtn.Size = UDim2.new(1, 0, 1, 0)
imgBtn.BackgroundTransparency = 0.2
imgBtn.AutoButtonColor = false
imgBtn.Image = "rbxassetid://120546351045897" -- üçé ·∫¢nh icon nh·ªè g√≥c m√†n h√¨nh - ƒë·ªïi ID n·∫øu mu·ªën üëà
local ic = Instance.new("UICorner", imgBtn); ic.CornerRadius = UDim.new(0,12)

imgBtn.MouseButton1Click:Connect(function()
	main.Visible = not main.Visible
end)

-- small enter animation
main.Size = UDim2.new(0, 0, 0, 0)
main:TweenSize(UDim2.new(0,400,0,250),"Out","Quad",0.18,true)

-- === H∆Ø·ªöNG D·∫™N NHANH (t·∫•t c·∫£ b·∫±ng ti·∫øng Vi·ªát, ch·ªânh tr·ª±c ti·∫øp) ===
-- üçé ƒê·ªïi t√™n Hub: s·ª≠a titleLabel.Text (t√¨m chu·ªói "T√©oüçéüçè Hub") --> x√≥a ch√∫ th√≠ch v√† nh·∫≠p t√™n m·ªõi.
-- üçé ƒê·ªïi ID ·∫£nh n·ªÅn: s·ª≠a bg.Image = "rbxassetid://..." ·ªü tr√™n.
-- üçé Th√™m code cho n√∫t/toggle/textbox/dropdown: t√¨m c√°c d√≤ng c√≥ comment "-- üçé Th√™m code ..." ho·∫∑c "-- TODO" v√† ch√®n logic Lua v√†o ƒë√≥.
-- üçé Mu·ªën th√™m tab m·ªõi: g·ªçi CreateTab("T√™n tab", "rbxassetid://icon") r·ªìi d√πng tab:AddButton/AddToggle... t∆∞∆°ng t·ª±.
-- üçé L∆∞u: copy to√†n b·ªô script v√†o StarterGui -> LocalScript, ch·∫°y Play (Play Solo) ƒë·ªÉ test.